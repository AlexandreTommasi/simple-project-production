name: Deploy to Azure Web App

on:
  workflow_dispatch:
  # Push trigger comentado para evitar deploy automático no primeiro commit
  # Descomente as linhas abaixo se quiser deploy automático em futuros pushes:
  # push:
  #   branches:
  #     - main

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'

      - name: npm install, build, and test
        run: |
          # Build frontend
          cd frontend
          npm install
          npm run build
          cd ..
          
          # Build backend  
          cd backend
          npm install
          npm run build --if-present
          npm run test --if-present -- --passWithNoTests
          
          # Copy frontend build to backend public folder
          mkdir -p public
          cp -r ../frontend/dist/* public/ || cp -r ../frontend/build/* public/
          
          # Create web.config for Azure IIS
          cat > web.config << 'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <configuration>
            <system.webServer>
              <handlers>
                <add name="iisnode" path="server.js" verb="*" modules="iisnode"/>
              </handlers>
              <rewrite>
                <rules>
                  <rule name="DynamicContent">
                    <conditions>
                      <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True"/>
                    </conditions>
                    <action type="Rewrite" url="server.js"/>
                  </rule>
                </rules>
              </rewrite>
              <httpErrors existingResponse="PassThrough" />
              <iisnode node_env="production" />
            </system.webServer>
          </configuration>
          EOF
          
          # Create server.js entry point that loads compiled TypeScript
          cat > server.js << 'EOF'
          // Entry point for Azure
          require('./dist/server.js');
          EOF
          
          # Update package.json start script
          node -e "const fs=require('fs'); const p=JSON.parse(fs.readFileSync('package.json')); p.scripts.start='node server.js'; fs.writeFileSync('package.json', JSON.stringify(p,null,2));"
          
          cd ..

      - name: Zip artifact for deployment
        run: |
          cd backend
          zip -r ../release.zip . -x "node_modules/*" ".git/*"
          cd ..

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    
    permissions:
      id-token: write

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: unzip release.zip
      
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'expandev-01'
          package: .